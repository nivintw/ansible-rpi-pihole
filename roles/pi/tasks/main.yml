---
- name: Set timezone to America/Chicago
  community.general.timezone:
    name: America/Chicago

- name: Set locale to en_US.UTF-8
  community.general.locale_gen:
    name: en_US.UTF-8
    state: present

- name: Add the personal user for administration - we will disable pi user login later.
  user:
    name: "{{ personal_admin_user }}"
    password: "{{ personal_admin_password | password_hash('sha512') }}"
    comment: personal user for admin.
    groups: sudo
    append: yes
    update_password: on_create

- name: Set authorized key for personal admin user copying it from current user.
  authorized_key:
    user: "{{ personal_admin_user }}"
    state: present
    #TODO: Update this to not assume the public key name
    key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"

- name: Change default password for pi
  user:
    name: pi
    password: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters,digits,punctuation') | password_hash('sha512')  }}"
    update_password: always

- name: Update APT package cache
  apt:
    update_cache: yes
  tags:
    - admin

- name: "Upgrade APT to the lastest packages"
  apt:
    upgrade: safe

- name: Install enhanced editor
  apt:
    name: vim
    state: present
    update_cache: false

- name: Install process observation tools
  ansible.builtin.apt:
    name: htop
    state: present
    update_cache: false

- name: Install cron job scheduler
  ansible.builtin.apt:
    name: cron
    state: present
    update_cache: false

# - name: "Disable WIFI and Bluetooth"
#   copy: src=./files/raspi-blacklist.conf dest=/etc/modprobe.d/raspi-blacklist.conf mode=0600
#   tags: admin

- name: "Set default bash aliases"
  copy: src=./files/etc_profile.d_bash_aliases.sh dest=/etc/profile.d/bash_aliases.sh mode=0600
  tags:
    - admin

- name: Install admin tools (python, nmap)
  apt:
    package:
      - python-apt
      - python-pip
      - nmap
    state: present
  tags:
    - admin
# - name: Install grin (better grep)
#   shell: pip install grin
#   tags: admin

# - name: Set static IP configuration
#   become: True
#   template: src="etc_network_interfaces.j2"
#     dest="/etc/network/interfaces"
#     owner=root
#     group=root
#     mode=0644
#   tags:
#     - pihole

# - name: "Reboot"
#   shell: sleep 2 && reboot
#   async: 1
#   poll: 0
#   ignore_errors: true
#   tags:
#     - pihole

# - name: "Wait for Raspberry PI to come back"
#   local_action: wait_for host={{ ansible_host }} port=22 state=started delay=10
#   become: false
